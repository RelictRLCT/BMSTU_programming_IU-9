(define (my-gcd a b)
  (if (and (= a 0) (> (abs b) 0))
      (abs b)
      (if (and (= b 0) (> (abs a) 0))
          (abs a)
          (if (= (remainder (abs (max a b)) (abs (min a b))) 0)
              (abs (min a b))
              (my-gcd (remainder (abs (max a b)) (abs (min a b))) (abs (min a b)))))))

(define (my-lcm a b)
  (if (or (< a 1) (< b 1))
      (display "Вы не знаете определение НОК")
      (/ (* a b) (my-gcd a b))))

(define (prime? n)
  (if (> n 1)
      (let ((a 2))
        (define (prime n a)
          (if (> n a)
              (if (= (remainder n a) 0)
                  #f
                  (prime n (+ a 1)))
              #t))
        (prime n a))
      #f))
